// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5LS7fmWpTWNVfuRHg1A41M
// Component: yc_bB036aWMV

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 5LS7fmWpTWNVfuRHg1A41M/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: yc_bB036aWMV/css

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: Flex__<"div">;
  section?: Flex__<"section">;
  svg?: Flex__<"svg">;
  h4?: Flex__<"h4">;
  text?: Flex__<"div">;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "collection",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            icon: "<svg viewBox='0 0 1024 1024' class='icon' version='1.1' xmlns='http://www.w3.org/2000/svg' fill='#000000'><g id='SVGRepo_bgCarrier' stroke-width='0'></g><g id='SVGRepo_tracerCarrier' stroke-linecap='round' stroke-linejoin='round'></g><g id='SVGRepo_iconCarrier'><path d='M242 280.3c-12.9 0-19.2-10.1-23.8-17.4-4.3-6.9-6.5-9.9-10.2-9.9s-5.9 3-10.2 9.9c-4.6 7.3-10.9 17.4-23.8 17.4s-19.2-10.1-23.8-17.4c-4.3-6.9-6.5-9.9-10.2-9.9s-5.9 3-10.2 9.9c-4.6 7.3-10.9 17.4-23.8 17.4s-19.2-10.1-23.8-17.4C77.9 256 75.7 253 72 253c-4.4 0-8-3.6-8-8s3.6-8 8-8c12.9 0 19.2 10.1 23.8 17.4 4.3 6.9 6.5 9.9 10.2 9.9s5.9-3 10.2-9.9C120.7 247 127 237 140 237s19.2 10.1 23.8 17.4c4.3 6.9 6.5 9.9 10.2 9.9 3.7 0 5.9-3 10.2-9.9C188.8 247 195 237 208 237s19.2 10.1 23.8 17.4c4.3 6.9 6.5 9.9 10.2 9.9 4.4 0 8 3.6 8 8s-3.6 8-8 8zM263.9 230.3c-13.8 0-20.7-9.8-25.7-17-5.1-7.3-7.7-10.2-12.7-10.2s-7.5 3-12.7 10.2c-5.1 7.2-12 17-25.7 17-13.8 0-20.7-9.8-25.7-17-5.1-7.3-7.7-10.2-12.7-10.2s-7.5 3-12.7 10.2c-5.1 7.2-12 17-25.7 17s-20.7-9.8-25.7-17c-5.1-7.3-7.7-10.2-12.7-10.2-4.4 0-8-3.6-8-8s3.6-8 8-8c13.8 0 20.7 9.8 25.7 17 5.1 7.3 7.7 10.2 12.7 10.2s7.5-3 12.7-10.2c5.1-7.2 12-17 25.7-17s20.7 9.8 25.7 17c5.1 7.3 7.7 10.2 12.7 10.2 5 0 7.5-3 12.7-10.2 5.1-7.2 12-17 25.7-17s20.7 9.8 25.7 17c5.1 7.3 7.7 10.2 12.7 10.2 4.4 0 8 3.6 8 8s-3.6 8-8 8z' fill='var(--token-TgwKMbq17Dj-)'></path><path d='M352 104.7m-32 0a32 32 0 1 0 64 0 32 32 0 1 0-64 0Z' fill='#FFEB4D'></path><path d='M352 144.7c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40z m0-64c-13.2 0-24 10.8-24 24s10.8 24 24 24 24-10.8 24-24-10.8-24-24-24z' fill='var(--token-TgwKMbq17Dj-)'></path><path d='M368.9 234.7h320v204h-320z' fill='#C2F2FF'></path><path d='M547.4 287.2L410.2 438.7h246.1z' fill='var(--token-AVUJIGoxq5lh)'></path><path d='M623.9 484.7h-255l150.4-166z' fill='#DAE5FF'></path><path d='M590.1 347.1l-40.2-9.9-52 5.2 49.5-54.6z' fill='var(--token-iEoa36S9sNK_)'></path><path d='M477.8 364.5l22.8 16.7 18.6-14 41.3 16.9-41.2-65.3z' fill='var(--token-iEoa36S9sNK_)'></path><path d='M439.9 311.7c-13.2 0-24-10.8-24-24s10.8-24 24-24 24 10.8 24 24-10.7 24-24 24z m0-32c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8z' fill='var(--token-TgwKMbq17Dj-)'></path><path d='M439.9 287.7m-16 0a16 16 0 1 0 32 0 16 16 0 1 0-32 0Z' fill='#FFEB4D'></path><path d='M800.9 950.7h-576c-17.6 0-32-14.4-32-32v-448c0-17.6 14.4-32 32-32h576c17.6 0 32 14.4 32 32v448c0 17.6-14.4 32-32 32z' fill='var(--token-AVUJIGoxq5lh)'></path><path d='M800.9 950.7h-576c-17.6 0-32-14.4-32-32v-96h640v96c0 17.6-14.4 32-32 32z' fill='#FFEB4D'></path><path d='M512.9 695.7m-193 0a193 193 0 1 0 386 0 193 193 0 1 0-386 0Z' fill='#DAE5FF'></path><path d='M512.9 695.7m-144 0a144 144 0 1 0 288 0 144 144 0 1 0-288 0Z' fill='var(--token-iEoa36S9sNK_)'></path><path d='M311.9 539.7h-58c-8.8 0-16-7.2-16-16s7.2-16 16-16h58c8.8 0 16 7.2 16 16s-7.2 16-16 16z' fill='var(--token-iEoa36S9sNK_)'></path><path d='M516.3 695.5m-48 0a48 48 0 1 0 96 0 48 48 0 1 0-96 0Z' fill='var(--token-G5oL9NA0v_9R)'></path><path d='M512.9 847.7c83.8 0 152-68.2 152-152s-68.2-152-152-152-152 68.2-152 152 68.2 152 152 152z m0-288c75 0 136 61 136 136s-61 136-136 136-136-61-136-136 61-136 136-136zM311.9 499.7h-58c-13.2 0-24 10.8-24 24s10.8 24 24 24h58c13.2 0 24-10.8 24-24 0-13.3-10.7-24-24-24z m0 32h-58c-4.4 0-8-3.6-8-8s3.6-8 8-8h58c4.4 0 8 3.6 8 8s-3.6 8-8 8z' fill='var(--token-TgwKMbq17Dj-)'></path><path d='M516.3 751.5c30.9 0 56-25.1 56-56s-25.1-56-56-56-56 25.1-56 56 25.1 56 56 56z m0-96c22.1 0 40 17.9 40 40s-17.9 40-40 40-40-17.9-40-40 17.9-40 40-40z' fill='var(--token-TgwKMbq17Dj-)'></path><path d='M951 686.3c-5 0-7.5-3-12.7-10.2-5.1-7.2-12-17-25.7-17s-20.7 9.8-25.7 17c-5.1 7.3-7.7 10.2-12.7 10.2-5 0-7.5-3-12.7-10.2-4.4-6.2-10.2-14.5-20.6-16.5v-33c2.3 1.6 4.5 4.4 7.5 8.7 5.1 7.2 12 17 25.7 17s20.7-9.8 25.7-17c5.1-7.3 7.7-10.2 12.7-10.2s7.5 3 12.7 10.2c5.1 7.2 12 17 25.7 17 4.4 0 8-3.6 8-8s-3.6-8-8-8c-5 0-7.5-3-12.7-10.2-5.1-7.2-12-17-25.7-17s-20.7 9.8-25.7 17c-5.1 7.3-7.7 10.2-12.7 10.2-5 0-7.5-3-12.7-10.2-4.4-6.2-10.2-14.5-20.6-16.5V470.7c0-22.1-17.9-40-40-40h-104v-196c0-4.4-3.6-8-8-8h-320c-4.4 0-8 3.6-8 8v196h-136c-22.1 0-40 17.9-40 40v448c0 9 3 17.3 8 24h-91.6c-4.4 0-8 3.6-8 8s3.6 8 8 8h824c4.4 0 8-3.6 8-8s-3.6-8-8-8h-92.4c5-6.7 8-15 8-24V676.5c2.3 1.6 4.5 4.4 7.5 8.7 5.1 7.2 12 17 25.7 17s20.7-9.8 25.7-17c5.1-7.3 7.7-10.2 12.7-10.2s7.5 3 12.7 10.2c5.1 7.2 12 17 25.7 17 4.4 0 8-3.6 8-8s-3.4-7.9-7.8-7.9zM376.9 242.7h304v188h-20.6L553.9 282.5c-1.4-2-3.6-3.2-6-3.3-2.4-0.1-4.8 0.8-6.4 2.6L406.6 430.7h-29.7v-188z m162.4 122.7l1.2 1.8-18.2-7.4c-2.6-1.1-5.6-0.7-7.8 1l-13.8 10.4-10.8-7.9 12-13.3 16.4-18.1 9.8 15.5 11.2 18z m-10-45.8l17.4-19.2 24.2 33.6-19.1-4.7c-0.6-0.2-1.3-0.2-1.9-0.2h-0.8l-12.9 1.3-6.9-10.8z m-33.4 68c2.8 2.1 6.7 2.1 9.5-0.1l14.9-11.3 34.7 14.2 25.3 40.2H428.6l50.2-55.5 17.1 12.5z m71.5-7.6c0-0.1-0.1-0.2-0.1-0.2l-14.7-23.2-6.9-11 3.6-0.4 36.4 9 54.9 76.4h-41.3L567.4 380z m257.5 538.7c0 13.2-10.7 24-24 24h-576c-13.2 0-24-10.8-24-24v-88h163.2c36.8 40.5 89.9 66 148.8 66s112-25.5 148.8-66h163.2v88z m-497-223c0-102 83-185 185-185s185 83 185 185-83 185-185 185-185-83-185-185z m497 119H674.8c24.6-33.3 39.1-74.5 39.1-119 0-110.8-90.2-201-201-201s-201 90.2-201 201c0 44.5 14.5 85.7 39.1 119H200.9v-344c0-13.2 10.8-24 24-24h576c13.2 0 24 10.8 24 24v344z' fill='var(--token-TgwKMbq17Dj-)'></path><path d='M200.9 565.1c5.8-1.4 10.9-3.1 15-5.4 11.2-6.3 16.7-13.3 19.8-20.4-3.6-4.2-5.8-9.7-5.8-15.6 0-12.1 9.1-22.2 20.8-23.8 8.4-7.9 24.1-14.3 55.2-18 58.1-6.9 69.4-24.8 70.8-35.3H224.9c-13.2 0-24 10.8-24 24v94.5z' fill='var(--token-iEoa36S9sNK_)'></path></g></svg>",
            heading: "One",
            body: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sollicitudin bibendum consequat. Pellentesque urna urna, scelerisque a urna ac, rutrum sollicitudin massa."
          },
          {
            icon: "<svg viewBox='0 0 1024 1024' class='icon' version='1.1' xmlns='http://www.w3.org/2000/svg' fill='#000000'><g id='SVGRepo_bgCarrier' stroke-width='0'></g><g id='SVGRepo_tracerCarrier' stroke-linecap='round' stroke-linejoin='round'></g><g id='SVGRepo_iconCarrier'><path d='M261.5 283.6c-13.8 0-20.7-9.8-25.7-17-5.1-7.3-7.7-10.2-12.7-10.2s-7.5 3-12.7 10.2c-5.1 7.2-12 17-25.7 17-13.8 0-20.7-9.8-25.7-17-5.1-7.3-7.7-10.2-12.7-10.2s-7.5 3-12.7 10.2c-5.1 7.2-12 17-25.7 17s-20.7-9.9-25.7-17c-5.1-7.3-7.7-10.2-12.7-10.2-4.4 0-8-3.6-8-8s3.6-8 8-8c13.8 0 20.7 9.8 25.7 17 5.1 7.3 7.7 10.2 12.7 10.2s7.5-3 12.7-10.2c5.1-7.2 12-17 25.7-17s20.7 9.8 25.7 17c5.1 7.3 7.7 10.2 12.7 10.2 5 0 7.5-3 12.7-10.2 5.1-7.2 12-17 25.7-17s20.7 9.8 25.7 17c5.1 7.3 7.7 10.2 12.7 10.2 4.4 0 8 3.6 8 8s-3.5 8-8 8zM261.5 233.6c-13.8 0-20.7-9.8-25.7-17-5.1-7.3-7.7-10.2-12.7-10.2s-7.5 3-12.7 10.2c-5.1 7.2-12 17-25.7 17-13.8 0-20.7-9.8-25.7-17-5.1-7.3-7.7-10.2-12.7-10.2s-7.5 3-12.7 10.2c-5.1 7.2-12 17-25.7 17s-20.7-9.9-25.7-17c-5.1-7.3-7.7-10.2-12.7-10.2-4.4 0-8-3.6-8-8s3.6-8 8-8c13.8 0 20.7 9.8 25.7 17 5.1 7.3 7.7 10.2 12.7 10.2s7.5-3 12.7-10.2c5.1-7.2 12-17 25.7-17s20.7 9.8 25.7 17c5.1 7.3 7.7 10.2 12.7 10.2 5 0 7.5-3 12.7-10.2 5.1-7.2 12-17 25.7-17s20.7 9.8 25.7 17c5.1 7.3 7.7 10.2 12.7 10.2 4.4 0 8 3.6 8 8s-3.5 8-8 8z' fill='#9A2D2F'></path><path d='M349.5 104m-32 0a32 32 0 1 0 64 0 32 32 0 1 0-64 0Z' fill='#FFEB4D'></path><path d='M349.5 144c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40z m0-64c-13.2 0-24 10.8-24 24s10.8 24 24 24 24-10.8 24-24-10.7-24-24-24z' fill='#9A2D2F'></path><path d='M746.5 951h-280l-50-631h380z' fill='#C0FCD0'></path><path d='M773.6 794.5l22.9-280h-380l22.9 280z' fill='#FFEB4D'></path><path d='M804 320.5H409.1c-6.9 0-12.6-5.6-12.6-12.6v-8.8c0-14.7 11.9-26.6 26.6-26.6h366.7c14.7 0 26.6 11.9 26.6 26.6v8.8c0.1 7-5.5 12.6-12.4 12.6z' fill='#DAE5FF'></path><path d='M766.5 273h-320v-42.4c0-16.4 13.3-29.6 29.6-29.6h260.7c16.4 0 29.6 13.3 29.6 29.6V273z' fill='#DAE5FF'></path><path d='M948.5 687.6c-5 0-7.5-3-12.7-10.2-5.1-7.2-12-17-25.7-17s-20.7 9.8-25.7 17c-5.1 7.3-7.7 10.2-12.7 10.2-5 0-7.5-3-12.7-10.2-5.1-7.2-12-17-25.7-17s-20.7 9.8-25.7 17c-5.1 7.3-7.7 10.2-12.7 10.2-1.7 0-3.1-0.3-4.4-1.1l2.7-33c0.6 0 1.1 0.1 1.7 0.1 13.8 0 20.7-9.8 25.7-17 5.1-7.3 7.7-10.2 12.7-10.2s7.5 3 12.7 10.2c5.1 7.2 12 17 25.7 17 13.8 0 20.7-9.8 25.7-17 5.1-7.3 7.7-10.2 12.7-10.2 5 0 7.5 3 12.7 10.2 5.1 7.2 12 17 25.7 17 4.4 0 8-3.6 8-8s-3.6-8-8-8c-5 0-7.5-3-12.7-10.2-5.1-7.2-12-17-25.7-17s-20.7 9.8-25.7 17c-5.1 7.3-7.7 10.2-12.7 10.2-5 0-7.5-3-12.7-10.2-5.1-7.2-12-17-25.7-17s-20.7 9.8-25.7 17c-5.1 7.3-7.7 10.2-12.7 10.2h-0.4l10-121.7c0.2-2.2-0.6-4.4-2.1-6.1s-3.6-2.6-5.9-2.6h-6.8l14.2-179c11.3 0 20.6-9.2 20.6-20.6v-8.8c0-19.1-15.5-34.6-34.6-34.6h-15.4v-34.4c0-20.7-16.9-37.6-37.6-37.6h1.6v-12c0-2.2-1.8-4-4-4h-24c-2.2 0-4 1.8-4 4v12H476.2c-20.7 0-37.6 16.9-37.6 37.6v34.4h-15.4c-19.1 0-34.6 15.5-34.6 34.6v8.8c0 11.3 9.2 20.6 20.6 20.6l14.2 179h-6.7c-2.2 0-4.4 0.9-5.9 2.6s-2.3 3.8-2.1 6.1l22.9 280c0.3 4.2 3.8 7.3 8 7.3h7.3l11 140.8H96.5c-4.4 0-8 3.6-8 8s3.6 8 8 8h824c4.4 0 8-3.6 8-8s-3.6-8-8-8H755.2l11.2-140.8h7.3c4.2 0 7.6-3.2 8-7.3l7.6-92.9c1.8 0.4 3.7 0.6 5.7 0.6 13.8 0 20.7-9.8 25.7-17 5.1-7.3 7.7-10.2 12.7-10.2s7.5 3 12.7 10.2c5.1 7.2 12 17 25.7 17 13.8 0 20.7-9.8 25.7-17 5.1-7.3 7.7-10.2 12.7-10.2 5 0 7.5 3 12.7 10.2 5.1 7.2 12 17 25.7 17 4.4 0 8-3.6 8-8s-3.6-8-8.1-8z m-494-457.7c0-11.9 9.7-21.6 21.6-21.6h260.7c11.9 0 21.6 9.7 21.6 21.6v34.4h-304v-34.4z m8.3 573.3h287.5l-11.1 140.5H473.9l-11.1-140.5z m303.5-16H446.8l-21.6-264h362.6l-21.5 264z m7.4-280H439.3l-14.1-178.5h362.7l-14.2 178.5z m-364.6-195c-2.5 0-4.6-2-4.6-4.6v-8.8c0-10.3 8.4-18.6 18.6-18.6H789.9c10.3 0 18.6 8.4 18.6 18.6v8.8c0 2.5-2 4.6-4.6 4.6H409.1z' fill='#9A2D2F'></path><path d='M368.5 568c-106 0-192 86-192 192s86 192 192 192 192-86 192-192-85.9-192-192-192z m0 256c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.6 64-64 64z' fill='#FFACC2'></path><path d='M368.5 568c-106 0-192 86-192 192 0 14.2 1.5 27.9 4.5 41.2 3.7 14.4 27.9 14.1 39.1 13 19-1.8 43.4 16.8 38.4 41.8s35.3 56.9 65.6 28c21.5-20.5 53.5-16.5 76-6.5 39.3 17.4 69-2 81.5-15.5 15.5-16.7 8.7-43 17.5-61 10.8-22 35.5-1.1 48.5-21 4.9-7.5 9.2-19.1 12.7-30.6C554.7 648.3 471 568 368.5 568z m0 256c-35.3 0-64-28.7-64-64s28.7-64 64-64 64 28.7 64 64-28.6 64-64 64z' fill='#FFFFFF'></path><path d='M568.2 748.9v-0.5c-0.1-1.5-0.2-2.9-0.3-4.4 0-0.3-0.1-0.6-0.1-0.9-0.1-1.3-0.2-2.7-0.4-4-0.1-0.7-0.2-1.5-0.3-2.2-0.1-0.9-0.2-1.7-0.3-2.6C556 649 491.5 581 408.9 564.1h-0.2l-4.5-0.9c-0.2 0-0.3-0.1-0.5-0.1-1.4-0.2-2.8-0.5-4.2-0.7-0.3 0-0.6-0.1-0.8-0.1-1.3-0.2-2.6-0.4-3.9-0.5-0.4 0-0.7-0.1-1.1-0.1-1.2-0.2-2.5-0.3-3.7-0.4-0.4 0-0.9-0.1-1.3-0.1-1.2-0.1-2.3-0.2-3.5-0.3-0.5 0-1-0.1-1.5-0.1-1.1-0.1-2.3-0.2-3.4-0.2-0.5 0-1.1-0.1-1.6-0.1-1.2-0.1-2.4-0.1-3.6-0.1-0.5 0-1 0-1.5-0.1-1.7 0-3.4-0.1-5.1-0.1-110.3 0-200 89.7-200 200 0 1.8 0 3.6 0.1 5.3v1c0 1.4 0.1 2.9 0.2 4.3 0 0.3 0 0.7 0.1 1 0.1 1.4 0.2 2.9 0.3 4.3 0 0.4 0.1 0.7 0.1 1.1 0.1 1.4 0.3 2.8 0.4 4.2 0 0.4 0.1 0.8 0.1 1.2 0.2 1.3 0.3 2.7 0.5 4 0.1 0.5 0.1 1 0.2 1.4 0.2 1.2 0.4 2.5 0.5 3.7l0.3 1.8c0.2 1.1 0.4 2.1 0.6 3.2 0.1 0.7 0.3 1.5 0.4 2.2 0.2 0.9 0.4 1.8 0.5 2.6 0.1 0.5 0.2 0.9 0.3 1.4 0 0.1 0 0.2 0.1 0.3v0.2c20 89.5 100 156.6 195.3 156.6 110.3 0 200-89.7 200-200 0-3.7-0.1-7.4-0.3-11.1zM368.5 576c1.6 0 3.1 0 4.7 0.1h1.4c1.1 0 2.2 0.1 3.3 0.1 0.5 0 1 0.1 1.5 0.1 1 0.1 2.1 0.1 3.1 0.2 0.5 0 1 0.1 1.4 0.1 1.1 0.1 2.1 0.2 3.2 0.3 0.4 0 0.9 0.1 1.3 0.1 1.1 0.1 2.2 0.2 3.3 0.4 0.4 0 0.7 0.1 1.1 0.1 1.2 0.2 2.3 0.3 3.5 0.5 0.3 0 0.6 0.1 0.9 0.1 1.2 0.2 2.5 0.4 3.7 0.6 0.2 0 0.4 0.1 0.6 0.1 1.3 0.2 2.7 0.5 4 0.8 0.1 0 0.2 0 0.3 0.1 73.2 15.1 130.6 73.8 143.9 147.6 0 0.1 0 0.3 0.1 0.4 0.2 1.3 0.4 2.5 0.6 3.8 0.1 0.5 0.1 0.9 0.2 1.4 0.1 0.9 0.3 1.9 0.4 2.9 0.1 0.7 0.2 1.4 0.3 2.2 0.1 0.7 0.2 1.4 0.2 2.1l0.3 2.7c0.1 0.5 0.1 1.1 0.1 1.6 0.1 1 0.2 2.1 0.2 3.1v0.7c-3.8 12.2-7.7 21.6-11.3 27.2-3.8 5.8-8.7 6.1-17.7 6.1-9.9 0-23.6 0-31.3 15.8-4.3 8.7-5.3 18.5-6.4 28-1.3 11.9-2.5 23.2-9.8 31.1-5 5.4-32.1 31.5-72.4 13.6-25.2-11.2-60.7-15-84.8 8-15.1 14.4-30.4 8.5-36.2 5.2-10.9-6-17.7-17.1-16-25.8 2.6-13-1-25.7-10.1-35.8-8.8-9.7-21.6-15.6-33.6-15.6-1.1 0-2.2 0-3.2 0.1-13.4 1.2-28.5-0.4-30.5-6.8l-0.3-1.5c-0.2-0.7-0.3-1.5-0.4-2.2-0.1-0.7-0.3-1.5-0.4-2.2-0.2-0.9-0.3-1.8-0.5-2.8l-0.3-1.8c-0.2-1.1-0.3-2.2-0.5-3.3-0.1-0.5-0.1-0.9-0.2-1.4-0.2-1.2-0.3-2.4-0.4-3.6 0-0.4-0.1-0.8-0.1-1.1-0.1-1.3-0.3-2.6-0.4-3.9 0-0.3-0.1-0.7-0.1-1-0.1-1.3-0.2-2.6-0.3-4 0-0.3 0-0.6-0.1-0.9-0.1-1.3-0.1-2.6-0.2-4v-0.9c0-1.6-0.1-3.3-0.1-4.9 0-101.3 82.6-183.8 184-183.8z m0 368c-80.1 0-148.3-51.4-173.6-122.9 7.2 1.7 15.8 2.1 25.8 1.1 7.9-0.7 17.3 3.4 23.5 10.3 4 4.4 8.4 11.9 6.3 22-3.1 15.6 7 33.6 24 43 7.4 4.1 15.1 6.1 22.6 6.1 11.5 0 22.8-4.7 32.4-13.8 18.4-17.5 46.8-14.1 67.2-5 38.9 17.3 72.3 2.4 90.6-17.4 10.8-11.7 12.5-26.8 14-40.2 0.9-8.5 1.8-16.5 4.8-22.7 3.1-6.2 6.9-6.8 16.9-6.8 8.1 0 18.7 0 27-8.3C536.1 876.9 460 944 368.5 944z' fill='#9A2D2F'></path><path d='M368.5 832c39.7 0 72-32.3 72-72s-32.3-72-72-72-72 32.3-72 72 32.3 72 72 72z m0-128c30.9 0 56 25.1 56 56s-25.1 56-56 56-56-25.1-56-56 25.2-56 56-56z' fill='#9A2D2F'></path><path d='M291.3 662.5l7.8-4.8' fill='#FFACC2'></path><path d='M291.3 670.5c-2.7 0-5.3-1.3-6.8-3.8-2.3-3.7-1.2-8.7 2.5-11l7.7-4.8c3.8-2.3 8.7-1.2 11 2.5 2.3 3.7 1.2 8.7-2.5 11l-7.7 4.8c-1.3 0.9-2.7 1.3-4.2 1.3z' fill='#9A2D2F'></path><path d='M233 673.3l-1.3 9.5' fill='#FFACC2'></path><path d='M231.7 690.8c-0.4 0-0.7 0-1.1-0.1-4.4-0.6-7.4-4.7-6.8-9l1.3-9.5c0.6-4.4 4.7-7.4 9-6.8 4.4 0.6 7.4 4.7 6.8 9l-1.3 9.5c-0.6 4-4 6.9-7.9 6.9z' fill='#9A2D2F'></path><path d='M211.1 732.6l1.7 8.3' fill='#FFACC2'></path><path d='M212.8 748.9c-3.7 0-7-2.6-7.8-6.4l-1.7-8.3c-0.9-4.3 1.9-8.6 6.2-9.4 4.3-0.9 8.6 1.9 9.4 6.2l1.7 8.3c0.9 4.3-1.9 8.6-6.2 9.4-0.5 0.2-1 0.2-1.6 0.2z' fill='#9A2D2F'></path><path d='M252 778.2l5.2 5.7' fill='#FFACC2'></path><path d='M257.2 791.9c-2.2 0-4.3-0.9-5.9-2.6l-5.3-5.8c-3-3.3-2.8-8.3 0.5-11.3s8.3-2.8 11.3 0.5l5.3 5.8c3 3.3 2.8 8.3-0.5 11.3-1.5 1.5-3.4 2.1-5.4 2.1z' fill='#9A2D2F'></path><path d='M291.3 854.1l-4.9 8.1' fill='#FFACC2'></path><path d='M286.4 870.2c-1.4 0-2.9-0.4-4.2-1.2-3.8-2.3-4.9-7.2-2.6-11l5-8.1c2.3-3.8 7.2-4.9 11-2.6 3.8 2.3 4.9 7.2 2.6 11l-5 8.1c-1.5 2.4-4.2 3.8-6.8 3.8z' fill='#9A2D2F'></path><path d='M355.3 610.8h7.6' fill='#FFACC2'></path><path d='M362.9 618.8h-7.5c-4.4 0-8-3.6-8-8s3.6-8 8-8h7.5c4.4 0 8 3.6 8 8s-3.6 8-8 8z' fill='#9A2D2F'></path><path d='M430.8 632.3l8.3 4.1' fill='#FFFFFF'></path><path d='M439.1 644.4c-1.2 0-2.4-0.3-3.5-0.8l-8.3-4c-4-1.9-5.6-6.7-3.7-10.7s6.7-5.6 10.7-3.7l8.3 4c4 1.9 5.6 6.7 3.7 10.7-1.4 2.8-4.2 4.5-7.2 4.5z' fill='#9A2D2F'></path><path d='M411.8 682.8l6 3.5' fill='#FFFFFF'></path><path d='M417.8 694.3c-1.4 0-2.8-0.4-4-1.1l-6-3.5c-3.8-2.2-5.1-7.1-2.9-10.9 2.2-3.8 7.1-5.1 10.9-2.9l6 3.5c3.8 2.2 5.1 7.1 2.9 10.9-1.5 2.6-4.2 4-6.9 4z' fill='#9A2D2F'></path><path d='M489 709.8l9.7 6.5' fill='#FFFFFF'></path><path d='M498.7 724.3c-1.5 0-3.1-0.4-4.4-1.4l-9.7-6.5c-3.7-2.5-4.7-7.4-2.2-11.1 2.5-3.7 7.4-4.7 11.1-2.2l9.7 6.5c3.7 2.5 4.7 7.4 2.2 11.1-1.6 2.3-4.1 3.6-6.7 3.6z' fill='#9A2D2F'></path><path d='M476.9 775.9l-4.9 10.3' fill='#FFFFFF'></path><path d='M472 794.2c-1.1 0-2.3-0.2-3.4-0.8-4-1.9-5.7-6.6-3.8-10.6l4.8-10.3c1.9-4 6.6-5.7 10.6-3.8 4 1.9 5.7 6.6 3.8 10.6l-4.8 10.3c-1.3 2.9-4.2 4.6-7.2 4.6z' fill='#9A2D2F'></path><path d='M408.4 846.8h9.4' fill='#FFFFFF'></path><path d='M417.8 854.8h-9.4c-4.4 0-8-3.6-8-8s3.6-8 8-8h9.4c4.4 0 8 3.6 8 8s-3.6 8-8 8z' fill='#9A2D2F'></path><path d='M423.2 280.2c-10.3 0-18.6 8.4-18.6 18.6v8.8c0 2.5 2 4.6 4.6 4.6h52.5c0.5-4.4 1.7-9.5 4.3-16 2.8-7 7.4-12 13.2-16h-56zM454.5 229.9v34.4h56.8c10-4.8 20.2-10.9 29.2-20.6 10.9-11.7 12.9-24.5 11.4-35.4h-75.8c-11.9-0.1-21.6 9.7-21.6 21.6zM459.2 362.3c3.8-16.2 3.5-25.8 2.9-33.6h-36.9l12.6 158.5c24.7-37.1 14.9-96.7 21.4-124.9z' fill='#FFFFFF'></path></g></svg>",
            heading: "Two",
            body: "Ut finibus eu nisi vel aliquam. Maecenas quis sapien id augue auctor auctor. Duis tellus risus, euismod quis condimentum nec, vehicula eget lorem."
          },
          {
            icon: "<svg viewBox='0 0 1024 1024' class='icon' version='1.1' xmlns='http://www.w3.org/2000/svg' fill='#000000'><g id='SVGRepo_bgCarrier' stroke-width='0'></g><g id='SVGRepo_tracerCarrier' stroke-linecap='round' stroke-linejoin='round'></g><g id='SVGRepo_iconCarrier'><path d='M263.7 231.7c-13.8 0-20.7-9.8-25.7-17-5.1-7.3-7.7-10.2-12.7-10.2s-7.5 3-12.7 10.2c-5.1 7.2-12 17-25.7 17-13.8 0-20.7-9.8-25.7-17-5.1-7.3-7.7-10.2-12.7-10.2s-7.5 3-12.7 10.2c-5.1 7.2-12 17-25.7 17s-20.7-9.8-25.7-17c-5.1-7.3-7.7-10.2-12.7-10.2-4.4 0-8-3.6-8-8s3.6-8 8-8c13.8 0 20.7 9.8 25.7 17 5.1 7.3 7.7 10.2 12.7 10.2s7.5-3 12.7-10.2c5.1-7.2 12-17 25.7-17s20.7 9.8 25.7 17c5.1 7.3 7.7 10.2 12.7 10.2 5 0 7.5-3 12.7-10.2 5.1-7.2 12-17 25.7-17s20.7 9.8 25.7 17c5.1 7.3 7.7 10.2 12.7 10.2 4.4 0 8 3.6 8 8s-3.6 8-8 8zM263.7 281.7c-13.8 0-20.7-9.8-25.7-17-5.1-7.3-7.7-10.2-12.7-10.2s-7.5 3-12.7 10.2c-5.1 7.2-12 17-25.7 17-13.8 0-20.7-9.8-25.7-17-5.1-7.3-7.7-10.2-12.7-10.2s-7.5 3-12.7 10.2c-5.1 7.2-12 17-25.7 17s-20.7-9.8-25.7-17c-5.1-7.3-7.7-10.2-12.7-10.2-4.4 0-8-3.6-8-8s3.6-8 8-8c13.8 0 20.7 9.8 25.7 17 5.1 7.3 7.7 10.2 12.7 10.2s7.5-3 12.7-10.2c5.1-7.2 12-17 25.7-17s20.7 9.8 25.7 17c5.1 7.3 7.7 10.2 12.7 10.2 5 0 7.5-3 12.7-10.2 5.1-7.2 12-17 25.7-17s20.7 9.8 25.7 17c5.1 7.3 7.7 10.2 12.7 10.2 4.4 0 8 3.6 8 8s-3.6 8-8 8zM951.7 680.7c-13.8 0-20.7-9.8-25.7-17-5.1-7.3-7.7-10.2-12.7-10.2s-7.5 3-12.7 10.2c-5.1 7.2-12 17-25.7 17-13.8 0-20.7-9.8-25.7-17-5.1-7.3-7.7-10.2-12.7-10.2s-7.5 3-12.7 10.2c-5.1 7.2-12 17-25.7 17s-20.7-9.8-25.7-17c-5.1-7.3-7.7-10.2-12.7-10.2-4.4 0-8-3.6-8-8s3.6-8 8-8c13.8 0 20.7 9.8 25.7 17 5.1 7.3 7.7 10.2 12.7 10.2s7.5-3 12.7-10.2c5.1-7.2 12-17 25.7-17s20.7 9.8 25.7 17c5.1 7.3 7.7 10.2 12.7 10.2 5 0 7.5-3 12.7-10.2 5.1-7.2 12-17 25.7-17s20.7 9.8 25.7 17c5.1 7.3 7.7 10.2 12.7 10.2 4.4 0 8 3.6 8 8s-3.6 8-8 8zM951.7 730.7c-13.8 0-20.7-9.8-25.7-17-5.1-7.3-7.7-10.2-12.7-10.2s-7.5 3-12.7 10.2c-5.1 7.2-12 17-25.7 17-13.8 0-20.7-9.8-25.7-17-5.1-7.3-7.7-10.2-12.7-10.2s-7.5 3-12.7 10.2c-5.1 7.2-12 17-25.7 17s-20.7-9.8-25.7-17c-5.1-7.3-7.7-10.2-12.7-10.2-4.4 0-8-3.6-8-8s3.6-8 8-8c13.8 0 20.7 9.8 25.7 17 5.1 7.3 7.7 10.2 12.7 10.2s7.5-3 12.7-10.2c5.1-7.2 12-17 25.7-17s20.7 9.8 25.7 17c5.1 7.3 7.7 10.2 12.7 10.2 5 0 7.5-3 12.7-10.2 5.1-7.2 12-17 25.7-17s20.7 9.8 25.7 17c5.1 7.3 7.7 10.2 12.7 10.2 4.4 0 8 3.6 8 8s-3.6 8-8 8z' fill='#9A2D2F'></path><path d='M351.8 104.1m-32 0a32 32 0 1 0 64 0 32 32 0 1 0-64 0Z' fill='#FFEB4D'></path><path d='M351.8 144.1c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-18 40-40 40z m0-64c-13.2 0-24 10.8-24 24s10.8 24 24 24 24-10.8 24-24-10.8-24-24-24z' fill='#9A2D2F'></path><path d='M541.7 130.1h48v790h-48z' fill='#DAE5FF'></path><path d='M815.7 594h-408c-8.8 0-16-7.2-16-16v-64c0-8.8 7.2-16 16-16h408l64 48-64 48z' fill='#C0FCD0'></path><path d='M315.7 439h408c8.8 0 16-7.2 16-16v-64c0-8.8-7.2-16-16-16h-408l-64 48 64 48z' fill='#FFEB4D'></path><path d='M815.7 284h-408c-8.8 0-16-7.2-16-16v-64c0-8.8 7.2-16 16-16h408l64 48-64 48z' fill='#DAE5FF'></path><path d='M383.7 810.1m-80 0a80 80 0 1 0 160 0 80 80 0 1 0-160 0Z' fill='#A7F9CE'></path><path d='M374.7 921.1h-196v-58c0-53.9 44.1-98 98-98s98 44.1 98 98v58z' fill='#FFACC2'></path><path d='M498.7 921.1h-161v-33.5c0-44.3 36.2-80.5 80.5-80.5s80.5 36.2 80.5 80.5v33.5z' fill='#CAE8FF'></path><path d='M924.7 913.1h-327V602h218c1.7 0 3.4-0.6 4.8-1.6l64-48c2-1.5 3.2-3.9 3.2-6.4s-1.2-4.9-3.2-6.4l-64-48c-1.4-1-3.1-1.6-4.8-1.6h-218v-43h126c13.2 0 24-10.8 24-24v-64c0-13.2-10.8-24-24-24h-126v-43h218c1.7 0 3.4-0.6 4.8-1.6l64-48c2-1.5 3.2-3.9 3.2-6.4s-1.2-4.9-3.2-6.4l-64-48c-1.4-1-3.1-1.6-4.8-1.6h-218v-49.9c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8V180h-126c-13.2 0-24 10.8-24 24v64c0 13.2 10.8 24 24 24h126v43h-218c-1.7 0-3.4 0.6-4.8 1.6l-64 48c-2 1.5-3.2 3.9-3.2 6.4s1.2 4.9 3.2 6.4l64 48c1.4 1 3.1 1.6 4.8 1.6h218v43h-126c-13.2 0-24 10.8-24 24v64c0 13.2 10.8 24 24 24h126v311.1h-27v-25.5c0-28.8-13.9-54.5-35.3-70.7 0.2-2.3 0.3-4.5 0.3-6.8 0-48.5-39.5-88-88-88-31 0-58.2 16.1-73.9 40.3-10.4-3.4-21.5-5.3-33.1-5.3-58.4 0-106 47.6-106 106v50h-70c-4.4 0-8 3.6-8 8s3.6 8 8 8h824c4.4 0 8-3.6 8-8s-3.6-8-8-8z m-375-1V602h32v310.1h-32z m0-774h32V180h-32v-41.9zM407.7 276c-4.4 0-8-3.6-8-8v-64c0-4.4 3.6-8 8-8H813l53.3 40-53.3 40H407.7z m174 16v43h-32v-43h32zM318.4 431L265 391l53.3-40h405.3c4.4 0 8 3.6 8 8v64c0 4.4-3.6 8-8 8H318.4z m263.3 16v43h-32v-43h32z m-174 139c-4.4 0-8-3.6-8-8v-64c0-4.4 3.6-8 8-8H813l53.3 40-53.3 40H407.7z m-24 152.1c38.8 0 70.5 30.9 71.9 69.3-11.4-5.3-24.1-8.3-37.4-8.3-17.7 0-34.1 5.2-48 14.2-10.2-19.1-26.1-34.7-45.4-44.6 13.1-18.5 34.6-30.6 58.9-30.6z m-197 175v-50c0-49.6 40.4-90 90-90 8.9 0 17.5 1.3 25.6 3.7 5.2 1.5 10.1 3.5 14.9 5.9 17.4 8.8 31.6 23.1 40.3 40.6-11 10.4-19.3 23.6-23.8 38.4-1.8 5.8-3 11.9-3.5 18.1-0.2 2.6-0.3 5.2-0.3 7.8v25.5H186.7z m159 0v-25.5c0-5.3 0.6-10.4 1.7-15.4 7.1-32.6 36.1-57.1 70.8-57.1 13.1 0 25.4 3.5 36 9.6 5 2.9 9.7 6.4 13.9 10.4 13.9 13.2 22.6 31.9 22.6 52.5v25.5h-145z' fill='#9A2D2F'></path><path d='M302.3 776.8c-8.1-2.4-16.7-3.7-25.6-3.7-46 0-84 34.6-89.3 79.2 22.7-0.7 47.4-5.4 60.9-11.7 24.3-11.3 9.5-38 43.8-42.2 10.8-1.3 21.2-3.2 32-11.8-2.2-1.4-4.5-2.7-6.9-3.9-4.8-2.4-9.8-4.4-14.9-5.9zM383.7 738.1c-21.9 0-41.6 9.9-54.8 25.4-1.4 1.7-2.8 3.4-4.1 5.2 4.9 2.5 9.5 5.3 13.9 8.5 0.6-0.2 1.3-0.5 1.9-0.7 8.8-3.2 15-9.2 21.7-12.8 11.3-6.1 27.5 1.3 45.7 1.3 7.5 0 15.3-2.3 23.6-8.7a71.865 71.865 0 0 0-47.9-18.2z' fill='#FFFFFF'></path></g></svg>",
            heading: "Three",
            body: "Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Donec finibus elit quis nibh aliquet, non vehicula turpis placerat."
          }
        ]
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__puGoY)}>
              {(_par => (!_par ? [] : Array.isArray(_par) ? _par : [_par]))(
                (() => {
                  try {
                    return $state.collection;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return [];
                    }
                    throw e;
                  }
                })()
              ).map((__plasmic_item_0, __plasmic_idx_0) => {
                const currentItem = __plasmic_item_0;
                const currentIndex = __plasmic_idx_0;
                return (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__eAr4T)}
                    key={currentIndex}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__d2Sep)}
                    >
                      <svg
                        data-plasmic-name={"svg"}
                        data-plasmic-override={overrides.svg}
                        className={classNames(projectcss.all, sty.svg)}
                        role={"img"}
                      />

                      <h4
                        data-plasmic-name={"h4"}
                        data-plasmic-override={overrides.h4}
                        className={classNames(
                          projectcss.all,
                          projectcss.h4,
                          projectcss.__wab_text,
                          sty.h4
                        )}
                      >
                        <React.Fragment>
                          {(() => {
                            try {
                              return currentItem.heading;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return "Welcome to your first page.";
                              }
                              throw e;
                            }
                          })()}
                        </React.Fragment>
                      </h4>
                      <div
                        data-plasmic-name={"text"}
                        data-plasmic-override={overrides.text}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text
                        )}
                      >
                        <React.Fragment>
                          {(() => {
                            try {
                              return currentItem.body;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return "";
                              }
                              throw e;
                            }
                          })()}
                        </React.Fragment>
                      </div>
                    </Stack__>
                  </div>
                );
              })}
            </div>
          </section>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "section", "svg", "h4", "text"],
  section: ["section", "svg", "h4", "text"],
  svg: ["svg"],
  h4: ["h4"],
  text: ["text"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  section: "section";
  svg: "svg";
  h4: "h4";
  text: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    section: makeNodeComponent("section"),
    svg: makeNodeComponent("svg"),
    h4: makeNodeComponent("h4"),
    text: makeNodeComponent("text"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
